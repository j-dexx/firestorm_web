<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- We obviously should have a decent title, for starters -->
    <title>Firestorm</title>
    <%= {:safe, css_link_tag()} %>
    <!-- We bring in fontawesome because it's awesome -->
    <script src="https://use.fontawesome.com/b706cffc0a.js"></script>
  </head>

  <!-- I'll add a layout-specific class to any layout I create -->
  <body class="layout-app">
    <!-- I'm using pure-drawer - http://mac81.github.io/pure-drawer/ - for a mobile navigation drawer -->
    <div class="pure-container" data-effect="pure-effect-slide">
      <input id="pure-toggle-right" class="pure-toggle" data-toggle="right" type="checkbox" />
      <label class="pure-toggle-label" data-toggle-label="right" for="pure-toggle-right">
        <span class="pure-toggle-icon"></span>
      </label>
      <div class="pure-drawer" data-position="right">
        <%= render "_drawer.html", conn: @conn %>
      </div>
      <!--
        this is the container for pure-drawer that holds the main content
        that the drawer will appear in front of
      -->
      <div class="pure-pusher-container">
        <!-- Stuff inside pure-pusher gets pushed if the drawer pushes content -->
        <div class="pure-pusher">
          <%= render "_navigation.html", conn: @conn, view_module: @view_module, view_template: @view_template %>
          <!-- Now our styles take over and we'll define the main content area -->
          <div class="layout-content">
            <div class="layout-drawer-tablet">
              <%= render "_drawer.html", conn: @conn %>
            </div>
            <!-- We made it to the main content! -->
            <div class="layout-content-main">
              <%= for {key, val} <- get_flash(@conn) do %>
                <p class="alert-box -<%= key %>" role="alert">
                  <%= val %>
                </p>
              <% end %>
              <!--
                And here's where we render a given view inside of the
                template
              -->
              <%= render @view_module, @view_template, assigns %>
            </div>
          </div>
        </div>
      </div>
      <!--
        Finally, this label will act as the overlay when it needs to appear
      -->
      <label class="pure-overlay" data-overlay="right" for="pure-toggle-right"></label>
    </div>
    <%= {:safe, js_script_tag()} %>
  </body>
</html>
